fragment Token on Token {
  address: id
  name
  symbol
  decimals
}

fragment ClmSnapshotData on ClmSnapshot {
  roundedTimestamp
  nativeToUSDPrice
  priceRangeMin1
  priceOfToken0InToken1
  priceRangeMax1
  token0ToNativePrice
  token1ToNativePrice
  totalUnderlyingAmount0
  totalUnderlyingAmount1
  totalSupply: managerTotalSupply
}

fragment ClassicSnapshotData on ClassicSnapshot {
  roundedTimestamp
  nativeToUSDPrice
  underlyingAmount
  underlyingToNativePrice
  underlyingBreakdownToNativePrices
  vaultUnderlyingBreakdownBalances
  vaultUnderlyingTotalSupply
  totalSupply: vaultSharesTotalSupply
}

fragment ClmPriceData on CLM {
  sharesToken: managerToken {
    ...Token
  }
  underlyingToken0 {
    ...Token
  }
  underlyingToken1 {
    ...Token
  }
  snapshots(
    first: $first
    skip: $skip
    orderBy: roundedTimestamp
    orderDirection: asc
    where: { roundedTimestamp_gte: $since, period: $period }
  ) {
    ...ClmSnapshotData
  }
}

fragment ClassicPriceData on Classic {
  sharesToken: vaultSharesToken {
    ...Token
  }
  underlyingToken {
    ...Token
  }
  underlyingBreakdownTokens {
    ...Token
  }
  underlyingBreakdownTokensOrder
  snapshots(
    first: $first
    skip: $skip
    orderBy: roundedTimestamp
    orderDirection: asc
    where: { roundedTimestamp_gte: $since, period: $period }
  ) {
    ...ClassicSnapshotData
  }
}

query VaultHistoricPrices(
  $vault_address: ID!
  $since: BigInt!
  $period: BigInt!
  $first: Int = 1000
  $skip: Int = 0
) {
  clm(id: $vault_address) {
    ...ClmPriceData
  }
  classic(id: $vault_address) {
    ...ClassicPriceData
  }
}
